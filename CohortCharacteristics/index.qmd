---
title: "CohortCharacteristics"
subtitle: "Characterise cohorts"
format:
  revealjs: 
    theme: [simple, styleOU.scss]
    incremental: true   
    slide-number: true
    chalkboard: true
    preview-links: auto
    margin: 0.07
    code-link: true
    code-line-numbers: false
    height: 900
    width: 1600
    footer: |
      <div style="position: relative; width: 100%;">
        <div style="text-align: center; font-weight: 500;">Running characterisation studies from beginning to end: a tutorial using DARWIN-EUÂ® standardised analytics</div>
        <div style="position: fixed; top: 20px; left: 20px;"><a href="../index.qmd" style="text-decoration: none;">â¬… Back</a></div>
      </div>
execute:
  echo: true
  eval: true
  output-width: 100%
editor: visual
---

## CohortCharacteristics

![](../images/CohortCharacteristics.png){fig-align="center"}

## Context

```{r, echo = FALSE}
options(width = 120)
```

. . .

This package aims to standardise and provide the tools to conduct Characterisation studies as of the Darwin-EU Catalogue of Standard Analytics.

![](../images/darwin.png){fig-align="center"}

## Package overview

-   [v1.0.0 on cran](https://CRAN.R-project.org/package=CohortCharacteristics)

-   [package website](https://darwin-eu.github.io/CohortCharacteristics/)

. . .

![](../images/CohortCharacteristics.png){fig-align="center" width="5.5in"}

## Functions

-   [summariseCohortCount](https://darwin-eu-dev.github.io/PatientProfiles/reference/summariseCohortCount.html)

-   [**summariseCohortAttrition**](https://darwin-eu-dev.github.io/PatientProfiles/reference/summariseCohortAttrition.html)

-   [**summariseCharacteristics**](https://darwin-eu-dev.github.io/PatientProfiles/reference/summariseCharacteristics.html)

-   [**summariseLargeScaleCharacteristics**](https://darwin-eu-dev.github.io/PatientProfiles/reference/summariseLargeScaleCharacteristics.html)

-   [summariseCohortOverlap](https://darwin-eu-dev.github.io/PatientProfiles/reference/summariseCohortOverlap.html)

-   [summariseCohortTiming](https://darwin-eu-dev.github.io/PatientProfiles/reference/summariseCohortTiming.html)

## Workflow

We have three types of functions:

-   **summarise**: these functions produce an standardised output to summarise a cohort. This standard output is called summarised_result.

-   **plot**: these functions produce plots (currently, only ggplot, but working to implement plotly) from a summarised_result object.

-   **table**: these functions produce tables (gt and flextable) from a summarised_result object.

. . .

```{r, eval = FALSE}
result <- summariseXXX(...)
```

. . .

```{r, eval = FALSE}
tableXXX(result)
```

. . .

```{r, eval = FALSE}
plotXXX(result)
```

. . .

```{mermaid}
%%| echo: false
flowchart LR
  A[summarise function ] --> B[Plot function ]
  A --> C[Table function ]
```

## Loadd needed packages

```{r}
library(duckdb)
library(CDMConnector)
library(dplyr)
library(here)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(PatientProfiles)
library(gt)
library(ggplot2)
library(dplyr, warn.conflicts = FALSE)
library(visOmopResults)
library(plotly)
```

## Create `GiBleed` cdm_reference object

```{r, message=TRUE}
datasetName <- "GiBleed"
requireEunomia(datasetName = datasetName)
con <- dbConnect(drv = duckdb(dbdir = eunomiaDir(datasetName = datasetName)))
cdm <- cdmFromCon(con = con, cdmSchema = "main", writeSchema = "main", cdmName = datasetName)
cdm
```

## Let' create a `acetaminophen` cohort

Let's create a cohort that is all records of `acetaminophen` with the following inclusion criteria:

- Collapse records separated by 30 days or less in the same episode.
- No prior record of acetaminophen in the last 180 days.
- At least 180 days of prior observation.
- Index date between 1990 and 2019

## Let' create a `acetaminophen` cohort

. . .

```{r}
codelist <- getDrugIngredientCodes(cdm = cdm, name = "acetaminophen", nameStyle = "{concept_name}")
cdm$acetaminophen <- conceptCohort(
  cdm = cdm, 
  conceptSet = codelist, 
  name = "acetaminophen",
  exit = "event_end_date"
) |>
  collapseCohorts(gap = 30) |>
  requireCohortIntersect(
    targetCohortTable = "acetaminophen", 
    window = c(-180, -1), 
    intersections = 0
  ) |>
  requirePriorObservation(minPriorObservation = 180) |>
  requireInDateRange(dateRange = as.Date(c("1990-01-01", "2019-12-31")))
```

## summariseCohortAttrition

. . .

`summariseCohortAttrition` extracts the data from `attrition(cdm$dus_cohort)` in a standard format:

. . .

```{r}
result <- summariseCohortAttrition(cohort = cdm$acetaminophen)
glimpse(x = result)
```

## summariseCohortAttrition

```{r}
settings(result) |>
  glimpse()
```

## brief mention of summaried_result

<summarised_result> object consist on the main table that we have seen + a table of settings.

-   **bind** Join multiple results objects.

-   **settings** Read the settings of the result object.

-   **suppress** Suppress the results to counts less than a certain number.

-   **exportSummarisedResult** Export the result object to a csv file.

-   **importSummarisedResult** Import a result object from a csv file.

## tableCohortAttrition

. . .

::: scrollable-content
```{r}
tableCohortAttrition(result = result)
```
:::

## Export the gt table

[gt](https://gt.rstudio.com/) tables can easily be exported:

```{r, eval=FALSE}
tab <- tableCohortAttrition(result = result)
gtsave(data = tab, filename = here("attrition.docx")) # pdf/html/png also allowed
```

## flextable is also supported

```{r}
tableCohortAttrition(result = result, type = "flextable")
```

## plotCohortAttrition

. . .

```{r, eval=FALSE}
plotCohortAttrition(result = result)
```

. . .

```{r, echo=FALSE, results='asis'}
plotCohortAttrition(result = result)
```

## Your turn

Can you visualise the attrition of a `simvastatin` cohort?

- Any record of `simvastatin`
- Collapse records separated by 90 days or less in the same episode.
- First record ever.
- At least 365 days of prior observation.
- Index date between 1990 and 2019

. . .

Can you suppress counts under 10?

## Result

```{r, echo=FALSE, results='asis'}
# create codelist
codelist <- getDrugIngredientCodes(cdm = cdm, name = "simvastatin")

# create cohort
cdm$simvastatin_cohort <- conceptCohort(
  cdm = cdm,
  conceptSet = codelist, 
  name = "simvastatin_cohort", 
  exit = "event_end_date"
) |>
  collapseCohorts(gap = 90) |>
  requireIsFirstEntry() |>
  requirePriorObservation(minPriorObservation = 365) |>
  requireInDateRange(dateRange = as.Date(c("1990-01-01", "2019-12-31")))

# summarise attrition
result <- cdm$simvastatin_cohort |>
  summariseCohortAttrition() |>
  suppress(minCellCount = 10)

# plot attrition
plotCohortAttrition(result)
```

## Solution

<details>

<summary>ðŸ’¡ Click to see solution</summary>

```{r, eval=FALSE}
# create codelist
codelist <- getDrugIngredientCodes(cdm = cdm, name = "simvastatin")

# create cohort
cdm$simvastatin_cohort <- conceptCohort(
  cdm = cdm,
  conceptSet = codelist, 
  name = "simvastatin_cohort", 
  exit = "event_end_date"
) |>
  collapseCohorts(gap = 90) |>
  requireIsFirstEntry() |>
  requirePriorObservation(minPriorObservation = 365) |>
  requireInDateRange(dateRange = as.Date(c("1990-01-01", "2019-12-31")))

# summarise attrition
result <- cdm$simvastatin_cohort |>
  summariseCohortAttrition() |>
  suppress(minCellCount = 10)

# plot attrition
plotCohortAttrition(result)
```

</details>

## summariseCharacteristics

[**summariseCharacteristics()**](https://darwin-eu-dev.github.io/CohortCharacteristics/reference/summariseCharacteristics.html) summarises the demographics of the cohort by default, but you can use the intersect arguments to evaluate:

-   Number of visits
-   Presence of medicines or conditions
-   ...

. . .

You need to identify the medications and/or conditions of interest as a *codelist* or *cohort* beforehand.

## Let's create some codelists

```{r}
medications <- getDrugIngredientCodes(
  cdm = cdm, 
  name = c("warfarin", "morphine", "verapamil", "atorvastatin", "nitroglycerin"), 
  nameStyle = "{concept_name}"
)
conditions <- list(
  "fever" = getCandidateCodes(cdm = cdm, keywords = "fever")$concept_id,
  "cough" = getCandidateCodes(cdm = cdm, keywords = "cough")$concept_id,
  "cardiac_arrest" = getCandidateCodes(cdm = cdm, keywords = "cardiac arrest")$concept_id,
  "myocardial_infarction" = getCandidateCodes(cdm = cdm, keywords = "myocardial infarction")$concept_id,
  "headache" = getCandidateCodes(cdm = cdm, keywords = "headache")$concept_id
)
```

## summariseCharacteristics

```{r}
result <- cdm$acetaminophen |>
  addSex() |>
  summariseCharacteristics(
    strata = list("sex"),
    demographics = TRUE,
    ageGroup = list(c(0, 19), c(20, 39), c(40, 59), c(60, 79), c(80, Inf)),
    tableIntersectCount = list(
      "Number visits prior year" = list(tableName = "visit_occurrence", window = c(-365, -1))
    ),
    conceptIntersectFlag = list(
      "Conditions any time prior" = list(conceptSet = conditions, window = c(-Inf, -1)),
      "Medications prior year" = list(conceptSet = medications, window = c(-365, -1))
    )
  )
result |>
  glimpse()
```

## tableCharacteristics

```{r, eval=FALSE}
tableCharacteristics(result = result)
```

::: scrollable-content
```{r, echo=FALSE}
tableCharacteristics(result = result)
```
:::

## tableCharacteristics

```{r, eval=FALSE}
tableCharacteristics(
  result = result,
  header = c("cdm_name", "sex"),
  groupColumn = c("cohort_name")
)
```

::: scrollable-content
```{r, echo=FALSE}
tableCharacteristics(
  result = result,
  header = c("cdm_name", "sex"),
  groupColumn = c("cohort_name")
)
```
:::

## tableCharacteristics

```{r, eval=FALSE}
result |>
  filter(!estimate_name %in% c("min", "max", "mean", "sd")) |>
  tableCharacteristics(
    header = c("cdm_name", "sex"),
    groupColumn = c("cohort_name")
  )
```

::: scrollable-content
```{r, echo=FALSE}
result |>
  filter(!estimate_name %in% c("min", "max", "mean", "sd")) |>
  tableCharacteristics(
    header = c("sex"),
    groupColumn = c("cohort_name")
  )
```
:::

## Your turn

Characterise the 'simvastatin' cohort with:

-   Demographics
-   Two age groups: 0-49; \>=50
-   Number of records in condition_occurrence on the index date.
-   Using same drugs than for acetaminophen which ones where used in the prior year *including index date*
-   Using same conditions than for acetaminophen which ones where used any time prior *including index date*

. . .

**Suppress counts under 10**

. . .

**Visualise it in a nice table**

. . .

**Can you stratify the result by age group?** (`PatientProfiles::addAge()` allows you to add age_group column to any table).

## Result

::: scrollable-content
```{r, echo=FALSE}
result <- cdm$simvastatin_cohort |>
  addAge(ageGroup = list(c(0, 49), c(50, Inf))) |>
  summariseCharacteristics(
    strata = list("age_group"),
    demographics = TRUE,
    ageGroup = list(c(0, 49), c(50, Inf)),
    tableIntersectCount = list(
      "Number conditions on index" = list(tableName = "condition_occurrence", window = c(0, 0))
    ),
    conceptIntersectFlag = list(
      "Conditions any time prior" = list(conceptSet = conditions, window = c(-Inf, 0)),
      "Medications prior year" = list(conceptSet = medications, window = c(-365, 0))
    )
  )
result |>
  suppress(minCellCount = 10) |>
  filter(!estimate_name %in% c("min", "max", "mean", "sd")) |>
  tableCharacteristics(
    header = "age_group", 
    groupColumn = "cohort_name",
    hide = c("table_name", "cdm_name")
  )
```
:::

## Solution

<details>

<summary>ðŸ’¡ Click to see solution</summary>

```{r, eval=FALSE}
result <- cdm$simvastatin_cohort |>
  PatientProfiles::addAge(ageGroup = list(c(0, 49), c(50, Inf))) |>
  summariseCharacteristics(
    strata = list("age_group"),
    demographics = TRUE,
    ageGroup = list(c(0, 49), c(50, Inf)),
    tableIntersectCount = list(
      "Number conditions on index" = list(tableName = "condition_occurrence", window = c(0, 0))
    ),
    cohortIntersectFlag = list(
      "Conditions any time prior" = list(targetCohortTable = "conditions", window = c(-Inf, 0)),
      "Medications prior year" = list(targetCohortTable = "medications", window = c(-365, 0))
    )
  )
result |>
  suppress(minCellCount = 10) |>
  dplyr::filter(!estimate_name %in% c("min", "max", "mean", "sd")) |>
  tableCharacteristics(
    header = "age_group", 
    groupColumn = "cohort_name",
    hide = c("table", "window", "value", "cdm_name")
  )
```

</details>

## summariseLargeScaleCharacteristics

Large scale characterisation is a data driven approach to characterise data and find which are the most frequently concepts in the desired windows of observation.

. . .

```{r}
result <- cdm$acetaminophen |>
  summariseLargeScaleCharacteristics(
    strata = list(),
    window = list(c(-365, -1), c(0, 0), c(1, 365)), 
    eventInWindow = c("condition_occurrence", "observation"), 
    episodeInWindow =  "drug_exposure", 
    minimumFrequency = 0
  )
```

## tableTopLargeScaleCharacteristics

. . .

::: scrollable-content
```{r}
result |>
  filterSettings(table_name == "drug_exposure") |>
  tableTopLargeScaleCharacteristics(topConcepts = 10)
```
:::

## tableLargeScaleCharacteristics

. . .

::: scrollable-content
```{r}
tableLargeScaleCharacteristics(result = result)
```
:::

## tableLargeScaleCharacteristics

. . .

::: scrollable-content
```{r}
tableLargeScaleCharacteristics(result = result, compareBy = "variable_level")
```
:::

## tableLargeScaleCharacteristics

. . .

::: scrollable-content
```{r}
tableLargeScaleCharacteristics(result = result, compareBy = "variable_level", smdReference = "-365 to -1")
```
:::

## plotLargeScaleCharacteristics

```{r}
plotLargeScaleCharacteristics(result = result)
```

## plotComparedLargeScaleCharacteristics

```{r}
plotComparedLargeScaleCharacteristics(
  result = result, 
  colour = "variable_level", 
  facet = "table_name"
)
```

## plotComparedLargeScaleCharacteristics

```{r}
plotComparedLargeScaleCharacteristics(
  result = result, 
  colour = "variable_level", 
  facet = "table_name"
) |>
  ggplotly()
```

## CohortCharacteristics

::: {style="display: flex; align-items: center; justify-content: space-between;"}
::: {style="flex: 1;"}
ðŸ‘‰ [**Packages website**](https://darwin-eu.github.io/CohortCharacteristics)\
ðŸ‘‰ [**CRAN link**](https://cran.r-project.org/web/packages/CohortCharacteristics)\
ðŸ‘‰ [**Manual**](https://cran.r-project.org/web/packages/CohortCharacteristics/CohortCharacteristics.pdf)

ðŸ“§ <a href="mailto:marti.catalasabate@ndorms.ox.ac.uk">marti.catalasabate\@ndorms.ox.ac.uk</a>
:::

::: {style="flex: 1; text-align: center;"}
<img src="https://github.com/darwin-eu/CohortCharacteristics/blob/main/man/figures/logo.png?raw=true" width="600"/>
:::
:::
